
#создаем масив а который будет являться лабиринтом
maze = (
'# ##############################################################################################################################',
'# ## # ##     ##   #    # ## ##  #  ## ##    ##  ## ##  #       ##         # # ##   # # # ###      ## ## ##        #  # # #  # #',
'# #     #####  ### # #### #  ###   ##   # ####  ###  ## ## ######  ### ### # # ### ## # #  #  ####### ## #  ######## ## # ## # #',
'# #####  ## # ## #    ##  ## # ###  ###    # ##     ##  #   # # ##   ####### #  ##    # ##   ### ###  ## ##    ##     # # ## # #',
'# #  ### ## # #  ## ###  ##  # ####     #### #### ##### # ### # #  #  ##  ## # #### ### #  ### # # ## #  ## ####### ### # #    #',
'# # ##          ##    ## ## ## # ###### ## #  ##  ## ##    ## # # ###### ##     # # # #   ##        # # ### ## ## #         ####',
'#      ######## ## ##### ## ## # # # ## ## # #### ## #### ###        # #  ### ###     ### #  ######## # # #     # # # ### #    #',
'######## # # ## #   ## #  # ##     #       # ##    # # #  ##  ## ### # # ##   #   ### #   # ##   ## # #   # # ### # ############',
'######## # # #  # ###  ## # ###### ##### #    ####       ####  #  #### # ## ### ### ##### #  # #### #   #   ####             ###',
'#      # # # ##     ##    #  ###      ##### ### #  #######  # ###   ## #      # ###  ##     ## ## #   ######## # ###### ###### #',
'######       ### ######## # ## ### ##   # #  ## ##  # ## ##    ####  # # ###### # ##  ### ###  ## # ### ###           ####     #',
'# # #  ## ##      ### #   # #   ####### # ##  # #  ##     ## ### #####     ###  # #  ##     ## ## #         ## # # ##  # # #####',
'#     ##  #  # # ## # ### # ## ## ## #     ##   # ### #####   ##  ## ## #### # ## ##  # #####       ##############  ##     # ###',
'# ### ######## #  # # # # #  # ##  # ##### #### #      ###  #### ### #   ##  #    ###   ###   # ###   ###       ## #######     #',
'# #     ## #   ##         ## #  ## #        ### # ###### ##  ##   #    #  ## ## ### # #     # #   # # # # ##########     ## ## #',
'#########    # ### ######    # ##  ####### ##   #   ##   #  #### ## ##### #  ## # # # ### ##### # # #                #####  ####',
'####### ######## ### # ##### # ###  ### ##  # #   ###  ### ####  ##  ## #### ##         #     # # # # # # ##### ###### # #### ##',
'# #   #  ## # #      #          ## ##   #  ###### # ##   #  ##  ##  ##   ##  ## ######### ############# ########## ###         #',
'# ## ## ##    #### #   ########  # #### ##  ##         ### ####  # #### ####            #          ##          # # # # ##### # #',
'#        # ##    ######## ####  ## #       ###### ######     ###    ##   # # # # # ### ## ############ ## ## #            ## ###',
'## # ##### ##### ##   #      ## ## ### # #  # ##   #   # ##### # ###### ##   #####   #########     ##   ###### # # ## # ########',
'#  #    ##  ## #  ### ## # #    #  # ##### ##  ## ## ### # ###       ## #  #    ####### ##   # ########### ##### #  # #        #',
'# #### ######  ## ##     ###### ## # ## #  ## ##     # # # # # #######    ##### #     #    #                 ### # ##### # ### #',
'####    # # # ##   ##### #####       ## ## ##  ## #### # #       ## ## #### ##### ##### #### ## ####### ### ## # # # #####   # #',
'## ### ## #    ## #### ### # #### ##       ## ##    ##     #######             ## ### #   #########   #   #    ###    # ### ## #',
'#  #    # ### ##  ##    #  #   ########### ##  ## ###  #####   ### #### ######### # #   ###   ### # ### ### ##  ## # ##   # ####',
'## ### ## # #  ##  #### ## ###   #         ## ### #### # ### ###     ###### ##        ### # ###       #####  ##  ###    ###   ##',
'#             ##  ## #   #  #### ######### ## #      #     # # ## #### ## #    ##### ##   #     ## # ###  # ####   ####   ###  #',
'### # # ### # ###    ### # ##      ### # # ## ### # ## ##### # ## #  # ##   ##     ###  #   ########## # ## ## # #   ### #######',
'#   ### #   #     ##        #### #            # # #### # # #    # # ## ## ###### ####  ## ###    #####    ###  ### #   #       #',
'# # #   ### ############# #      ############      # #     # #### #        ## #####   ####### #### # # ##   ##  ##### ##########',
'# # # ####  #  ### ###    # # ## ##   #####   # ##     # #   #### # #### #  #       #       # # ##      ## ####     ### ##     #',
'### ###    ###   # # # #### # ## #  #       # #  ## # ## # #           # ##   # ## ########      ## ######## #  ###        ## ##',
'######  # ##   #   # # ###  ############### # ##  # # ## ##### ## # # ##  ## ####### ###  ## #####    # # ## ##   ### # ####   #',
'#  # ######## ## #     #   ###  # ## #      # ## ## #  #     ###  #######  #             ######### ####    #  ## ######    ## ##',
'##   # # #    #  ## ## ## ## ## #      # ## # #   ###### ###   ##       # ## #### # # # ######          #### ##      ### # ##  #',
'#  #     #### ## ## ## #  #       ### ## #  # # #     ##   ## ##  #######  #   ########## ## # ###########      ### ## #########',
'## #####      ## #  ## # ##### ## ##   #### # # # ## ##  ###  ###       ## ###   # # # #   # #    ###      ## #  #####      ## #',
'#  #     ## #### # ##  ### #####  ## # #    ### # ######  ###   ## # ######### #         ###   ##     ########## # # # #### #  #',
'###### #######   #########       ######### #### #   ## ##   # # ## #       # # # ### # # # # #  # ## ###      ## #     # #### ##',
'#      ##      #### # ## ### ##### ## ##      # ## ##     ######## # #### ## ###   # # ###   ##########  ######### #####  ##   #',
'######  ### # ####           ##          # #### ####### #        # #   ##      ## ## #  ## #      # # ##    ## ##      # #### ##',
'# ##   ########  #### ## ## ######### # ##   ##      ## # ### ###### ###  ## ##########    ######## #    ####   # ###### #     #',
'#  ###### ## ### ## ####### #         # #  #  # # # ##  #   #    ##    ## ##          ## #    ## ##   #### ### ##   ###    # ###',
'##      # ##      # ### # # ####### # ### ##### # #  ## # # # # ### # ####### ## ## ###  # ## ##  # ### ##  ##  # ### # ###### #',
'### # #    ######           ##      # #   #   # # ####### # # #   # #      ##  ###    ## # ##    ## # # ## ##  ## # #    ## ## #',
'# ###### #  # #### # # # ##  ## # # # # #   ### # ####    # # ### # #### #####   ## # #  #  # ##              ### # # ####   # #',
'#  #     ##        # # #  ##  ### # # ### #   # #    #### ###   # #   ##    ## ###  # # ## ##  ## ## # # ## # # # #     ## ### #',
'## ##### ### # # # # # ## #  ##   # # #   # ##### # ##     ###### # ###  ############ #  #####  ######## #  #       #####  #   #',
'#   # ## # ##### # ###  # ##  ## ## ### # # ###   ###  # #      # #   ##            # ##    ###      ##### ### ####   # ##   # #',
'# #      #       # ##  ##### ##   ###   # #   # #   # ## ## ##### # # #  # ### # # ###### #   ## ###    ## # #    ###      #####',
'# # ### ### # ## ###  ##     ####  #### # ### ### ###### ##     # ### ## #  ######## # #  ## ###   #### #    ########## ##### ##',
'# # #    #### #  #   #### # ## ## ##    #######   ##     ## # # #   # #  # ##          ## ## ##  #    #### #     #    # ###    #',
'##### # ##    # ####  ##  # ##    #####       # # ### # ##  ###### #######    ## ## # ##   ###  ## ####    #####   ####     ## #',
'## ## #  ### ## #    #### #  ####   ##  ## ######  ## # ### ## # #   # #   # ###### # ### ##   ##     ####   ##  #    ## ## ####',
'#     # ##   ##### #  # # # ##    ###  ##      ### ## ### #      ###   ## ## #  ##  #  ## ### #### ##  ### # ## #####  # #    ##',
'## # ######### # ### ##   #  ### #####  ## # #  ## #  #     ############   #   ### ### #   ##  ##   ##   ### ##     ## # # ##  #',
'#######           ##  # # ####   #  #  ### # ##  #### ### #            ## ### ###    #### ##  #### ###########  ## ##### #### ##',
'# # # ##### # # #    ####  # ######   ## #######  ##  #   # ## # ## #####   # # ## ###  #  ##   ##    ##    ## ##      # ##    #',
'#     ##    ###### #  ##  ##    #   #  # ## ## # ####### ## #  # ##     ## ## #  #  ###   ##  #  # ##    ########### ####### # #',
'#####    ##### # # # ##  ######   # ##         #  ##      # # ##  ## #####  #   ###   ## ###### ##### #### ##  ## ####     ### #',
'###### # ##        #  ## ## #### ## ## # ## ## ####### # ####  # ##      ## # #  ### ##  ####     ##     # ## ##       #####   #',
'#      #  #### ## ## ##  #       #  ## #  #  # ##  # ###   ## ## #### ##########   #####  ##  # #  ####### #     ####### # #####',
'## ##### ##    ## #  ## #### ## ### ## ##### #  ##       # ## #   ###      # # ######  # ###### # ## #####   ########### # # ###',
'######    ### ##  ## ## #     ### # ##     # # #### ### ##### ## ## # ## #            ##### #   #          # ##                #',
'#      #### # ###  ####### # ##     ## ## ####### ###       # ##    #  # # # ## #####   # #   # ## ## # # ##    # # # # # # # ##',
'#### # #       ## #### # # ######## ####### # # # #### ### ##### # #########  #     # #   ## ##  ###  # # ## # ############ #  #',
'#    # ## ########## #     #           #  #     # #      ###   ###         #### ## ##### ##   ##   ## # # ## #  ## # #   ## # ##',
'# # ## #  #          # # # # ## ## # #   ## #####   ## #     ####  #######  ######  ## ##### #### ##  # #  ####        #### #  #',
'# #  # ## ## ## # ##   # # ###  #  ### #    ##  ## ### ## ####    #########      # ### ###    ##  #  ## ##   ## ## ###  # ### ##',
'# # ####  #   ###  ### ###   ## ##   # # ##    ##  ##  ##   ## ##         # ######   # # ####  ## ##  ##### ##   #  ###    ## ##',
'### # ###### ##   ##   #   ######  # # # ### #####  ## #  #  ###  # #######   # ####      # ##### ## ### #   ## ###   ####  #  #',
'### #   ## #### ######## #   ##   ## # ### # ###### #  ## # ##   ##       # #      # # # ## ##  # #      ## ##   ####    #######',
'#   # #         ##       # ###### ## #  ##     ##   ##  # #  #####  # # # # # ## ##### #       ##### # ####  ## ##  ## #     ###',
'# # # ## #### # ###### # #   ##   ## # #### # ### #  ## # ##     ## ### # # #  #   ##  # # # #    ## #    ####     ########### #',
'######## #    # # # ## # ### ## #  ###  ##  # #   # ##  #### # # ##  ## # ### ## ##### # ###### # ## # # ##    ## ### # ## ##  #',
'#        # # ## #      #  ## ## ## ### ##  ###### # ###  ##  # # ##########   ##    ## #      ### ## # #  ### ##    # # ## ## ##',
'####### #### ## ## ##### ##  #   # #   ## ## #  ###   ##  ## # #       # ####  # ######## #########  # # ##    # ##   #        #',
'#       #    #  #  #     ### ## ## # ####      ##   ###  ######## # ####  ##  ##  ###             ## # # ## ## ##### ## ### # ##',
'### # ###### # ### # ## ##   #  ## ####   # # #####  ### #     ####    # ####  ##   ### # #### ####  ###  # #   ##       ####  #',
'### #  ##    ###   # #   ## ###  # #    # # #   ##  ##     ##### #  ##    # ####  #  ## #    ####### ##  ## # # #  # # #   ## ##',
'#   # ### # ######## ## ######  ###### ## ### #  ##  ### ### ##    #### #    ####### ## # ##       # #  ### ### ## ### ###  #  #',
'# # ###   # #   #### #    ##   ## # ## #    ### #### ##      ## ##    # # ##       ######  ## ## # ### ## #   # #   ##  ## #####',
'#####   # ### #      ## # ## ####    # #######  # ##### # # ##  ## # ## #  ## # ##  ##  # ##   ######     # # # ## ####  # #   #',
'#     # # #   # # ## #  # #  ##   ##         ##   # #   ########## ###### #####  # ### #######    ##  ### # # #### # ## ##   ###',
'## # ## # ### # # ## #### ##  ## ##### # # # ## ###   #   ## # #      ##   # ## ##   # # # ##  # ####  ## ### ##   # ##  # #   #',
'#  # #  # #   ### ## #     # ##  ## ## ### # ## #   # # #      ## # #  # #    # ## #       ########   ###   # ## #   ## ## ### #',
'#### ## ##### #####  ## # ##### ##      ## #### ## ## # # # ##  # # # ## # # ## ###### # #    #   ### #   # ###  # # ##  #   ###',
'######  ##        ####### # ##  ### # #  #    ###  ## ### #  # ## # #  # # ###       # ### ##   #   # ## ####   ## # ## ## #####',
'#      #### # ### ### #      # ## ### ##### #   ##### #   ####  ### ######   ## # # ##  ## ############   ##  # #### #  ##     #',
'### #####   # ##  #     ## #####   ##  ##   ## #####  # #    ## #       ## #### ###  ##  #            ## #### #   ## ##  # ### #',
'##   ##   # # ## ### # ##   # #  #    ##  ######     ## # ##  #### # ########     ##  ## # # ###### ###  ##   # #### ## ##  ## #',
'#  # #  # # # ##  ####  ## ##   ### #  ##   # ### ## ## #  ##  ##  #      # #### #### #  ###    ####### ##  # #    ######  ##  #',
'# ##### ##### ##### ## ###  ### #   ##  # ###     ## #  # ##  #### # # ##     ##### ####  ## ##    ## # ####### ##     ## ### ##',
'### #    ##   #          # ##   ## ### ##   ### #  #### # ###  ##  # # ## ### # # #  ##  ##   ## #    #  ###    ## ######   #  #',
'#   ## #  ### ## # ## # ##  ## ##    ###  #  ## ##   ####   ## ### ### ##   #       ##  ##  #  ### #### ## ## # #  ###    ### ##',
'# #    ##   #  #####  ###  ##  ### #  ### ## ## #  ###    #### # #  ##  ## ### ## #####  # ## ##      #    ## ### ## ####  ##  #',
'### # ##  ####### #  #####  ## #   ##   # ## ## ## ##  ##    # #   ##  ##    # #    # #### ##  ## # ### # #######      #####  ##',
'#   # ###   ### #   ##     ##  ## #### ##### #  #  #  ##  #### ## ##  ### # ######### ##########  # #######     # ###### #### ##',
'#####  ## ###     #  ## # #### ##  # #  ## # ## ## ##  ##    # #   ##   # # # # ## #         ### ##       # # # #    # #    #  #',
'#     ##   ## # # ##  # # #     ##   ##    # ## #  #  #### ###### #### ####          #########    # ### #######   ##     # ## ##',
'##### ## #  ### # ### ### # ## ##  #  ## # # #  ## ##  # #     ## ##     ## # ### ##    ## # ######   #   ## #  #  #### ####   #',
'#      ####  ## ### #  ## #  #### ### #  # # ## ## #  ##   # ###   ## ## #  #  ##  #######       ## # ## ### ## ##    #    # ###',
'## # #  ##  #####     ########      # ## # #  #######  ## ##   ## ##   #### ## ###      #  # ## ##  ###  #   #   ## # # ## ### #',
'#### # ####  # ###### #### # #### #####  ####  ##     ##  ############ ##   ##   ## # #   #########   ## # #   #  # # # #      #',
'#    ####   ##         ##  # # #     ## ##    ##  ###  ##  ##### # # ##### ##  # ## ##### # #   # #####  # # # ## # ###### ### #',
'## #    ## ##  ## ## #  ##       ## ####### ##### #   ####     #     ##    ## ####   ##       #       #### # #  ###     ##   # #',
'#  # # ##  ## ### #  # #### ####  #   ##     ##   ## ##### # ### #########  #  #####  ## # # ########## #### # ##### ##  ## ## #',
'[# ## #  ##  ### # ## # #    #    ## #  ## # ##### ##   ##  #        # ###  ## ## ##  ##### ###### #       ## # ##     # ##   # #',
'# #  ## ### ##    ## # #### ### ######### # ##    ## ##### # # ###### #   ###    ###  # #     #     ## ## ## # ## ## ## #  # # #',
'# ##  #   ###### ##### ##   ##    ## ###  #  ### ##   ##   # #      # ###   ## #   ## #   ###   # ###   #### # ## ######## # # #',
'###  #### ### #   ##   #### ## ##      ## ####   ## # #### # ## ###    ## ###### #  #####   ## ##   #######  # ##  ######### ###',
'### ## #### # # ###  ### ## #  ### # #  # #    # ###### #  # ##   ## # ##      # #####    # ##  # #    ## ####  ##   ## # ##   #',
'#       ##       ## ##      ##  ## # ## # ## # #  ###     ## ## ###  # ## ######     ## # #  # ####### ##    ## #  #       #####',
'## ## # #### ## ##  ## ## # #  ##  #  ### #  # # ##   # # #   # #########      #######  # ## ###   ###### ######## # # # #     #',
'#  #  #    # #   ## ## #### # #######   #### # # #### # # ## ##   ###     # ##     ######  #  #### # ## # #  # #   # # #### ####',
'##### # # ###### #   # #    #   ##    ###    # # #    # # #  ## # # #### ## ## # #      ## ##  ##     # # # ## ### # #   ##    #',
'#     # ####     ### #### # # ###  ##  ## #### #### ####### ##  #      # ## ## #### ## ### #####  ## ## # #     #### ###  ######',
'#### ##    ## ## #   ##   # ### ## ## ##  #    ##   #  ##   ## ## # # ## ## #    ##  # ##        ###  #     # #  ##    # ##### #',
'#    #  ####  #### #  ## ##     ## #   ## ### ##  # ##    #  # ## ### ##  ### # ### ###### ### #   ##   # # # ## #### ##       #',
'## # ##    ## #    # ###### ###  # ## ###  ##  ######  #### ## ##   #  ##  ## # ##   ## #   ## #####  ##### ####  ####### # # ##',
'#  # ## # ##  # ## # ##       # ## ##   ##  ## ##     ##     #  ## ## ####  # # ## # #    # #      ##    ##    ##       # # #  #',
'############################################################################################################################## #',
)

maze1 = []
maze2 = []
for i in range(len(maze)):
    maze1.insert(i,maze[i].replace('#','1'))
for i in range(len(maze1)):
    maze2.insert(i,maze1[i].replace(' ','0'))
a = []
for i in range(len(maze2)):
    a.append([])
    for j in range(len(maze2[i])):
        if maze2[i][j] == '1':
            a[i].append(1)
        else:
            a[i].append(0)


start = 0, 1
end = 122, 126
m = []
for i in range(len(a)):
    m.append([])
    for j in range(len(a[i])):
        m[-1].append(0)
i,j = start
m[i][j] = 1

def make_step(k):
  for i in range(len(m)):
    for j in range(len(m[i])):
      if m[i][j] == k:
        if i>0 and m[i-1][j] == 0 and a[i-1][j] == 0:
          m[i-1][j] = k + 1
        if j>0 and m[i][j-1] == 0 and a[i][j-1] == 0:
          m[i][j-1] = k + 1
        if i<len(m)-1 and m[i+1][j] == 0 and a[i+1][j] == 0:
          m[i+1][j] = k + 1
        if j<len(m[i])-1 and m[i][j+1] == 0 and a[i][j+1] == 0:
           m[i][j+1] = k + 1

k = 0
while m[end[0]][end[1]] == 0:
    k += 1
    make_step(k)

i, j = end
k = m[i][j]
the_path = [(i,j)]
while k > 1:
  if i > 0 and m[i - 1][j] == k-1:
    i, j = i-1, j
    the_path.append((i, j))
    k-=1
  elif j > 0 and m[i][j - 1] == k-1:
    i, j = i, j-1
    the_path.append((i, j))
    k-=1
  elif i < len(m) - 1 and m[i + 1][j] == k-1:
    i, j = i+1, j
    the_path.append((i, j))
    k-=1
  elif j < len(m[i]) - 1 and m[i][j + 1] == k-1:
    i, j = i, j+1
    the_path.append((i, j))
    k -= 1

print (the_path)
